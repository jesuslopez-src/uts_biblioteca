
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import tkinter as tk
import sqlite3
import os
import sys
import subprocess
import hashlib

OUTPUT_PATH = os.path.join(os.path.dirname(__file__))
ASSETS_PATH = os.path.join(OUTPUT_PATH, "assets", "frame0")

ruta_directorio_actual = os.getcwd()

ruta_seleccion = os.path.join(ruta_directorio_actual, "Seleccion", "seleccion.py")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

conn = sqlite3.connect('biblioteca.db')
c = conn.cursor()


window = Tk()

window.geometry("1280x810")
window.configure(bg = "#FFFFFF")


def registrar_admin():
    usu_nom = entry_1.get()
    usu_pass = entry_2.get()
    admin_pin = entry_3.get()
    
    hashed_contraseña = hashlib.sha256(usu_pass.encode('utf-8')).hexdigest()
    hashed_pin = hashlib.sha256(usu_pass.encode('utf-8')).hexdigest()
    
    # Creamos la tabla de libros, si acaso no existe...
    create_libros_table = """CREATE TABLE IF NOT EXISTS usuario (
                                id INTEGER PRIMARY KEY AUTOINCREMENT,
                                nombre TEXT,
                                autor TEXT,
                                año NUMERIC,
                                cantidad NUMERIC,
                                tipo TEXT
                            );"""
    c.execute(create_libros_table)
    
    
    c.execute('INSERT INTO usuario (usu_nom, usu_pass, admin_pin) VALUES (?, ?, ?)', (usu_nom, hashed_contraseña, hashed_pin))
    c.execute('SELECT MAX(usu_id) FROM usuario')
    max_id = c.fetchone()[0]

    # aqui se resetea la sqlite seq, en donde where name, es el nombre de la tabla a la cual queremos que se le quite el bug del rowid
    c.execute('UPDATE sqlite_sequence SET seq = ? WHERE name = ?', (max_id, 'usuario'))

    
    conn.commit()
    
    conn.close()
    
    entry_1.delete(0, tk.END)
    entry_2.delete(0, tk.END)
    entry_3.delete(0, tk.END)
    
    messagebox.showinfo("Registro Exitoso", "Admin registrado exitosamente")

def abrir_seleccion():
    
  window.destroy()

  subprocess.call(["python", ruta_seleccion])


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 810,
    width = 1280,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    640.0,
    407.0,
    image=image_image_1
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    640.0,
    368.5,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#BDBDBD",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=551.0,
    y=352.0,
    width=178.0,
    height=35.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    640.0,
    445.5,
    image=entry_image_2
)
entry_2 = Entry(
    show = "*",
    bd=0,
    bg="#BDBDBD",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=551.0,
    y=429.0,
    width=178.0,
    height=35.0
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    command = abrir_seleccion,
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    relief="flat"
)
button_1.place(
    x=60.0,
    y=51.0,
    width=146.0,
    height=34.0
)

button_image_hover_1 = PhotoImage(
    file=relative_to_assets("button_hover_1.png"))

def button_1_hover(e):
    button_1.config(
        image=button_image_hover_1
    )
def button_1_leave(e):
    button_1.config(
        image=button_image_1
    )

button_1.bind('<Enter>', button_1_hover)
button_1.bind('<Leave>', button_1_leave)


button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    command = registrar_admin,
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    relief="flat"
)
button_2.place(
    x=564.0,
    y=601.0,
    width=146.0,
    height=38.0
)

button_image_hover_2 = PhotoImage(
    file=relative_to_assets("button_hover_2.png"))

def button_2_hover(e):
    button_2.config(
        image=button_image_hover_2
    )
def button_2_leave(e):
    button_2.config(
        image=button_image_2
    )

button_2.bind('<Enter>', button_2_hover)
button_2.bind('<Leave>', button_2_leave)


image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    571.0,
    334.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    587.0,
    413.0,
    image=image_image_3
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    642.0,
    522.5,
    image=entry_image_3
)
entry_3 = Entry(
    show = "*",
    bd=0,
    bg="#BDBDBD",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=553.0,
    y=506.0,
    width=178.0,
    height=35.0
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    581.0,
    490.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    637.0,
    232.0,
    image=image_image_5
)
window.resizable(False, False)
window.mainloop()
