
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import tkinter as tk
import sqlite3
import os
import sys
import subprocess
import hashlib


OUTPUT_PATH = os.path.join(os.path.dirname(__file__))
ASSETS_PATH = os.path.join(OUTPUT_PATH, "assets", "frame0")

ruta_directorio_actual = os.getcwd()

ruta_abrir_seleccion = os.path.join(ruta_directorio_actual, "Seleccion", "seleccion.py")

conn = sqlite3.connect('biblioteca.db')
c = conn.cursor()


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def abrir_seleccion():
    
  create_libros_table = """CREATE TABLE IF NOT EXISTS libros (
                                id INTEGER PRIMARY KEY AUTOINCREMENT,
                                nombre TEXT,
                                autor TEXT,
                                año NUMERIC,
                                cantidad NUMERIC,
                                tipo TEXT
                            );"""
  c.execute(create_libros_table)
  
  create_prestamos_table = """CREATE TABLE IF NOT EXISTS prestamos (
                                id INTEGER PRIMARY KEY AUTOINCREMENT,
                                nombre_prestamo TEXT,
                                autor_prestamo TEXT,
                                año_prestamo NUMERIC,
                                cantidad_prestamo NUMERIC,
                                tipo_prestamo TEXT,
                                fecha_prestamo TEXT
                            );"""
  c.execute(create_prestamos_table)
  
  create_usuario_table = """CREATE TABLE IF NOT EXISTS usuario (
                                usu_id INTEGER PRIMARY KEY AUTOINCREMENT,
                                usu_nom TEXT,
                                usu_pass TEXT,
                                admin_pin NUMERIC
                            );"""
  c.execute(create_usuario_table)
  
  
  insert_statement = """
    INSERT INTO usuario (usu_nom, usu_pass, admin_pin)
    VALUES (?, ?, ?)
    """

  values = ("admin", "admin", 1496)
  c.execute(insert_statement, values)
    
  c.execute('SELECT MAX(usu_id) FROM usuario')
  max_id = c.fetchone()[0]

    # aqui se resetea la sqlite seq, en donde where name, es el nombre de la tabla a la cual queremos que se le quite el bug del rowid
  c.execute('UPDATE sqlite_sequence SET seq = ? WHERE name = ?', (max_id, 'usuario'))
  
  conn.commit()
  
  conn.close()
    
  window.destroy()

  subprocess.call(["python", ruta_abrir_seleccion])

window = Tk()

window.geometry("1280x810")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 810,
    width = 1280,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    640.0,
    407.0,
    image=image_image_1
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    command = abrir_seleccion,
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    relief="flat"
)
button_1.place(
    x=432.0,
    y=696.0,
    width=368.0,
    height=66.0
)

button_image_hover_1 = PhotoImage(
    file=relative_to_assets("button_hover_1.png"))

def button_1_hover(e):
    button_1.config(
        image=button_image_hover_1
    )
def button_1_leave(e):
    button_1.config(
        image=button_image_1
    )

button_1.bind('<Enter>', button_1_hover)
button_1.bind('<Leave>', button_1_leave)


image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    640.0,
    114.0,
    image=image_image_2
)
window.resizable(False, False)
window.mainloop()
